# Generated by Django 5.0.6 on 2025-08-20 15:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("notifications", "0004_alter_notificationlog_status"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="schedulednotification",
            name="notificatio_schedul_3e7b9f_idx",
        ),
        migrations.RemoveField(
            model_name="schedulednotification",
            name="date_only",
        ),
        migrations.RemoveField(
            model_name="schedulednotification",
            name="scheduled_at",
        ),
        migrations.AddField(
            model_name="schedulednotification",
            name="effective_send_at",
            field=models.DateTimeField(
                blank=True,
                help_text="Resolved UTC instant when this should be sent (single source of truth).",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="schedulednotification",
            name="scheduled_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="schedulednotification",
            name="scheduled_time",
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="schedulednotification",
            name="scheduling_mode",
            field=models.CharField(
                choices=[
                    ("IMMEDIATE", "Immediate"),
                    ("ALL_DAY_DATE", "All-day Date"),
                    ("TODAY_AT_TIME", "Today at Time"),
                    ("EXACT_DATETIME", "Exact Date+Time"),
                ],
                default="IMMEDIATE",
                help_text="How the schedule was expressed by the user.",
                max_length=20,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="schedulednotification",
            name="idempotency_key",
            field=models.CharField(
                blank=True, db_index=True, max_length=128, null=True
            ),
        ),
        migrations.AlterField(
            model_name="schedulednotification",
            name="state",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("SCHEDULED", "Scheduled"),
                    ("RETRYING", "Retrying"),
                    ("QUEUED", "Queued"),
                    ("SENT", "Sent"),
                    ("FAILED", "Failed"),
                    ("CANCELED", "Canceled"),
                ],
                default="PENDING",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="schedulednotification",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="scheduled_notifications",
                to="notifications.notificationtemplate",
            ),
        ),
        migrations.AlterField(
            model_name="schedulednotification",
            name="user_timezone",
            field=models.CharField(
                default="UTC",
                help_text="IANA timezone used to resolve inputs (e.g., 'Asia/Karachi').",
                max_length=64,
            ),
        ),
        migrations.AddIndex(
            model_name="schedulednotification",
            index=models.Index(
                fields=["state", "effective_send_at"],
                name="notificatio_state_f63e65_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="schedulednotification",
            index=models.Index(
                fields=["effective_send_at"], name="notificatio_effecti_83f4bc_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="schedulednotification",
            constraint=models.UniqueConstraint(
                condition=models.Q(("idempotency_key__isnull", False)),
                fields=("idempotency_key",),
                name="uniq_nonnull_idempotency_key",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedulednotification",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("scheduling_mode", "IMMEDIATE"), _negated=True),
                    models.Q(
                        ("scheduled_date__isnull", True),
                        ("scheduled_time__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="sched_mode_immediate_no_inputs",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedulednotification",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("scheduling_mode", "ALL_DAY_DATE"), _negated=True),
                    models.Q(
                        ("scheduled_date__isnull", False),
                        ("scheduled_time__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="sched_mode_all_day_requires_date_only",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedulednotification",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("scheduling_mode", "TODAY_AT_TIME"), _negated=True),
                    models.Q(
                        ("scheduled_time__isnull", False),
                        ("scheduled_date__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="sched_mode_today_at_time_requires_time_only",
            ),
        ),
        migrations.AddConstraint(
            model_name="schedulednotification",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("scheduling_mode", "EXACT_DATETIME"), _negated=True),
                    models.Q(
                        ("scheduled_date__isnull", False),
                        ("scheduled_time__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="sched_mode_exact_requires_both",
            ),
        ),
    ]
